import{b as r,o,w as n,g as l,v as i,x as u,z as t}from"./modules/vue-DFpLUG3R.js";import{I as c}from"./slidev/default-CGmXT2On.js";import{u as d,f as m}from"./slidev/context-CDomfIWi.js";import"./index-gmhGXWGF.js";import"./modules/shiki-Cef1cqCC.js";const x={__name:"slides.md__slidev_9",setup(p){const{$clicksContext:s,$frontmatter:a}=d();return s.setup(),(f,e)=>(o(),r(c,i(u(t(m)(t(a),8))),{default:n(()=>[...e[0]||(e[0]=[l("h1",null,"3. Дип‑дайв — Event‑driven уведомления",-1),l("h3",null,"Data Flow:",-1),l("ul",null,[l("li",null,[l("ol",null,[l("li",null,"OLTP → Outbox/CDC → Kafka.saved_searches (userId)")])]),l("li",null,[l("ol",{start:"2"},[l("li",null,"Projection‑consumer → обновляет Redis/KTable (saved searches + prefs по userId)")])]),l("li",null,[l("ol",{start:"3"},[l("li",null,"Ingest → Kafka.listing_events (listingId)")])]),l("li",null,[l("ol",{start:"4"},[l("li",null,"Matcher: consume listing.events → ищет кандидаты saved_search в projection индексе → подтягивает prefs из проекции (Redis/KTable) → пишет alert.created в alerts (key=userId)")])]),l("li",null,[l("ol",{start:"5"},[l("li",null,"Notifications: consume alerts → отправка → пишет alert_status")])]),l("li",null,[l("ol",{start:"6"},[l("li",null,"Alert Status Worker: consume alert_status → SETNX/TTL (идемпотентность, TTL на alertId) + fallback: UPSERT UNIQUE(alertId) в БД")])])],-1)])]),_:1},16))}};export{x as default};
